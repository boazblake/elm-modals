var _user$project$Update$isJust = function (maybe) {
	var _p0 = maybe;
	if (_p0.ctor === 'Just') {
		return true;
	} else {
		return false;
	}
};
var _user$project$Update$focusCmd = F2(
	function (old, $new) {
		var _p1 = {
			ctor: '_Tuple2',
			_0: _user$project$Update$isJust(old),
			_1: _user$project$Update$isJust($new)
		};
		if (((_p1.ctor === '_Tuple2') && (_p1._0 === false)) && (_p1._1 === true)) {
			return _user$project$Ports$focusModule(
				{ctor: '_Tuple0'});
		} else {
			return _elm_lang$core$Platform_Cmd$none;
		}
	});
var _user$project$Update$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateTacos':
				var _p3 = A2(_user$project$Tacos_Update$update, _p2._0, model.tacos);
				var newTacos = _p3._0;
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						tacos: newTacos,
						modal: A2(_elm_lang$core$Maybe$map, _user$project$Models$TacoModal, newTacos.modal)
					});
				return {ctor: '_Tuple2', _0: newModel, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateDestroyWorld':
				var _p4 = A2(_user$project$DestroyWorld_Update$update, _p2._0, model.destroyWorld);
				var newDestroyWorld = _p4._0;
				var newModel = _elm_lang$core$Native_Utils.update(
					model,
					{
						destroyWorld: newDestroyWorld,
						isWorldDestroyed: newDestroyWorld.isWorldDestroyed,
						modal: A2(_elm_lang$core$Maybe$map, _user$project$Models$WorldModel, newDestroyWorld.modal)
					});
				var newCommand = A2(_user$project$Update$focusCmd, model.modal, newModel.modal);
				return {ctor: '_Tuple2', _0: newModel, _1: newCommand};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
